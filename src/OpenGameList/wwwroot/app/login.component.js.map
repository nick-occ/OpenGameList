{"version":3,"sources":["login.component.ts"],"names":["LoginComponent","fb","router","authService","this","title","loginForm","loginError","group","username","forms_1","Validators","required","password","prototype","performLogin","e","_this","preventDefault","value","login","subscribe","data","auth","getAuth","alert","access_token","navigate","err","console","log","__decorate","core_1","Component","selector","template","exports_1"],"mappings":"igCA0BAA,eAAA,WAKI,QAAAA,gBAAoBC,GACRC,OACAC,aAFQC,KAAAH,GAAAA,GACRG,KAAAF,OAAAA,OACAE,KAAAD,YAAAA,YANZC,KAAAC,MAAQ,QACRD,KAAAE,UAAY,KACZF,KAAAG,YAAa,EAKTH,KAAKE,UAAYL,GAAGO,OAChBC,UAAW,GAAIC,QAAAC,WAAWC,UAC1BC,UAAW,GAAIH,QAAAC,WAAWC,YAqBtC,MAjBIZ,gBAAAc,UAAAC,aAAA,SAAaC,GAAb,GAAAC,OAAAb,IACIY,GAAEE,gBACF,IAAIT,UAAWL,KAAKE,UAAUa,MAAMV,SAChCI,SAAWT,KAAKE,UAAUa,MAAMN,QACpCT,MAAKD,YAAYiB,MAAMX,SAAUI,UAC5BQ,UAAU,SAACC,MAERL,MAAKV,YAAa,CAClB,IAAIgB,MAAON,MAAKd,YAAYqB,SAC5BC,OAAM,iBAAmBF,KAAKG,cAC9BT,MAAKf,OAAOyB,UAAU,MACvB,SAACC,KACAC,QAAQC,IAAIF,KAEZX,MAAKV,YAAa,KAjDlCP,eAAA+B,YAACC,OAAAC,WACGC,SAAU,QACVC,SAAU,8kCAmBdC,UAAA,iBAAApC","file":"login.component.js","sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\"; \r\nimport { Router } from \"@angular/router\"; \r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    template: ` \r\n       <div class=\"login-container\">\r\n            <h2 class=\"form-login-heading\">Login</h2>\r\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"loginError\"><strong>Warning:</strong> Username or Password mismatch</div> \r\n            <form class=\"form-login\" [formGroup]=\"loginForm\" (submit)=\"performLogin($event)\">\r\n                <input formControlName=\"username\" type=\"text\" class=\"form-control\" placeholder=\"Your username or e-mail address\" required autofocus /> \r\n                <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Your password\" required /> \r\n                <div class=\"checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" value=\"remember-me\">\r\n                        Remember Me\r\n                    </label>\r\n                </div>\r\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n            </form>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class LoginComponent {\r\n    title = \"Login\"\r\n    loginForm = null;\r\n    loginError = false;\r\n\r\n    constructor(private fb: FormBuilder,\r\n        private router: Router,\r\n        private authService: AuthService) {\r\n        this.loginForm = fb.group({\r\n            username: [\"\", Validators.required],\r\n            password: [\"\", Validators.required]\r\n        });\r\n    }\r\n\r\n    performLogin(e) {\r\n        e.preventDefault();\r\n        var username = this.loginForm.value.username;\r\n        var password = this.loginForm.value.password;\r\n        this.authService.login(username, password)\r\n            .subscribe((data) => {\r\n                //login successful\r\n                this.loginError = false;\r\n                var auth = this.authService.getAuth();\r\n                alert(\"Our Token is: \" + auth.access_token);\r\n                this.router.navigate([\"\"]);\r\n            }, (err) => {\r\n                console.log(err);\r\n                //login failure\r\n                this.loginError = true;\r\n            });\r\n    }\r\n} "]}